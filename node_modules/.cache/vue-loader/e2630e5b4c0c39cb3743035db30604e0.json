{"remainingRequest":"E:\\fate\\federal-study-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\fate\\federal-study-vue\\node_modules\\@bairong\\jax-core\\src\\components\\CollapseBox\\CollapseBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\fate\\federal-study-vue\\node_modules\\@bairong\\jax-core\\src\\components\\CollapseBox\\CollapseBox.vue","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport {findComponentsDownward} from '../base/utils/assist';\nconst prefixCls = 'br-collapse-box';\n\nexport default {\n  name: 'CollapseBox',\n  props: {\n    value: {\n      type: [Array, String]\n    },\n    simple: Boolean,\n    accordion: Boolean // ? 手风琴\n  },\n  data () {\n    return {\n      currentActives: null\n    };\n  },\n  computed: {\n    classes () {\n      return [\n        prefixCls,\n        {\n          [`${prefixCls}-simple`]: this.simple\n        }\n      ];\n    }\n  },\n  mounted () {\n    this.currentActives = this.value;\n    this.setPartChildren();\n  },\n  watch: {\n    value (value) {\n      this.currentActives = value;\n    },\n    currentActives () {\n      this.setPartChildren();\n    }\n  },\n  methods: {\n    setPartChildren () {\n      const activeKey = this.getActiveKey();\n      const partChildren = findComponentsDownward(this, 'PartBox');\n      partChildren.forEach((child, index) => {\n        const name = child.name || index.toString();\n        child.isActive = activeKey.indexOf(name) > -1;\n        child.index = index;\n      });\n    },\n    getActiveKey () {\n      let activeKey = this.currentActives || [];\n      const accordion = this.accordion;\n      if (!Array.isArray(activeKey)) {\n        activeKey = [activeKey];\n      }\n      if (accordion && activeKey.length > 1) {\n        activeKey = [activeKey[0]];\n      }\n      for (let i = 0; i < activeKey.length; i++) {\n        activeKey[i] = activeKey[i].toString();\n      }\n      return activeKey;\n    },\n    toggle (data) {\n      const name = data.name.toString();\n      let newActiveKey = [];\n      if (this.accordion) {\n        if (!data.isActive) {\n          newActiveKey.push(name);\n        }\n      } else {\n        const activeKey = this.getActiveKey();\n        const nameIndex = activeKey.indexOf(name);\n        if (data.isActive) {\n          if (nameIndex > -1) {\n            activeKey.splice(nameIndex, 1);\n          }\n        } else {\n          if (nameIndex < 0) {\n            activeKey.push(name);\n          }\n        }\n        newActiveKey = activeKey;\n      }\n      this.currentActives = newActiveKey;\n      this.$emit('on-change', newActiveKey);\n      this.$emit('input', newActiveKey); // v-model\n    }\n  }\n};\n",{"version":3,"sources":["CollapseBox.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CollapseBox.vue","sourceRoot":"node_modules/@bairong/jax-core/src/components/CollapseBox","sourcesContent":["<template>\n  <div :class=\"classes\">\n    <slot></slot>\n  </div>\n</template>\n\n<script>\nimport {findComponentsDownward} from '../base/utils/assist';\nconst prefixCls = 'br-collapse-box';\n\nexport default {\n  name: 'CollapseBox',\n  props: {\n    value: {\n      type: [Array, String]\n    },\n    simple: Boolean,\n    accordion: Boolean // ? 手风琴\n  },\n  data () {\n    return {\n      currentActives: null\n    };\n  },\n  computed: {\n    classes () {\n      return [\n        prefixCls,\n        {\n          [`${prefixCls}-simple`]: this.simple\n        }\n      ];\n    }\n  },\n  mounted () {\n    this.currentActives = this.value;\n    this.setPartChildren();\n  },\n  watch: {\n    value (value) {\n      this.currentActives = value;\n    },\n    currentActives () {\n      this.setPartChildren();\n    }\n  },\n  methods: {\n    setPartChildren () {\n      const activeKey = this.getActiveKey();\n      const partChildren = findComponentsDownward(this, 'PartBox');\n      partChildren.forEach((child, index) => {\n        const name = child.name || index.toString();\n        child.isActive = activeKey.indexOf(name) > -1;\n        child.index = index;\n      });\n    },\n    getActiveKey () {\n      let activeKey = this.currentActives || [];\n      const accordion = this.accordion;\n      if (!Array.isArray(activeKey)) {\n        activeKey = [activeKey];\n      }\n      if (accordion && activeKey.length > 1) {\n        activeKey = [activeKey[0]];\n      }\n      for (let i = 0; i < activeKey.length; i++) {\n        activeKey[i] = activeKey[i].toString();\n      }\n      return activeKey;\n    },\n    toggle (data) {\n      const name = data.name.toString();\n      let newActiveKey = [];\n      if (this.accordion) {\n        if (!data.isActive) {\n          newActiveKey.push(name);\n        }\n      } else {\n        const activeKey = this.getActiveKey();\n        const nameIndex = activeKey.indexOf(name);\n        if (data.isActive) {\n          if (nameIndex > -1) {\n            activeKey.splice(nameIndex, 1);\n          }\n        } else {\n          if (nameIndex < 0) {\n            activeKey.push(name);\n          }\n        }\n        newActiveKey = activeKey;\n      }\n      this.currentActives = newActiveKey;\n      this.$emit('on-change', newActiveKey);\n      this.$emit('input', newActiveKey); // v-model\n    }\n  }\n};\n</script>\n"]}]}