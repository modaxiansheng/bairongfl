{"remainingRequest":"E:\\bairongfl\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\bairongfl\\src\\views\\safeIntersection\\SafeIntersection.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\bairongfl\\src\\views\\safeIntersection\\SafeIntersection.vue","mtime":1592460842066},{"path":"E:\\bairongfl\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport http from '@/utils/http';\nimport { taskForm } from '@/store/module/studyTask';\nexport default {\n    data () {\n        return {\n            tabType: 'study',\n            hostData: [\n            ],\n            guestData: [],\n            taskForm,\n            taskRule: {},\n            safeintersection: {\n                SampleFetchingtime: this.common.safeintersection.SampleFetchingtime,\n                dataperiod: this.common.safeintersection.dataperiod,\n                datatype: this.common.safeintersection.datatype,\n                hostselectedvalue:this.common.safeintersection.hostselectedvalue,\n                guestselectedvalue:this.common.safeintersection.guestselectedvalue\n            },\n            ruleValidate: {\n                SampleFetchingtime: [\n                    { required: true, message: '取数时间不能为空', trigger: 'blur' }\n                ],\n                dataperiod: [\n                    { required: true, message: '取数周期不能为空', trigger: 'blur' },\n                ],\n                datatype: [\n                    { required: true, message: '取数规则不能为空', trigger: 'change' }\n                ],\n                hostselectedvalue: [\n                    { required: true, message: 'Host不能为空', trigger: 'change' }\n                ],\n                guestselectedvalue: [\n                    { required: true, message: 'Guest不能为空', trigger: 'change' }\n                ],\n            }\n        }\n    },\n    methods: {\n        handleSubmit2(){\n              this.$refs.safeintersection.validate((valid) => {\n                if (valid) {\n                    this.$Message.success('Success!');\n                    // console.log(JSON.stringify(this.safeintersection));\n                    // console.log(this.common.safeintersection)\n                     Promise.all([ this.createHttp()]).then(resList => {\n                        console.log(resList)\n                        resList.forEach(element => {\n                            console.log(element)\n                            if(element.status==0){\n                                window.open(element.result.board_url);\n                            }          \n                        });\n                    });\n                } else {\n                    this.$Message.error('Fail!');\n                }\n            })\n           \n        },\n        handleSubmit(){\n            setTimeout(this.handleSub(),10)\n           \n        },\n        createHttp () {\n            var submit_info = {\n                'name' : '安全求交'+ Date.parse(new Date()),\n                'role':this.common.coderole.role,\n                'task':'intersection',\n                'data':{\n                    'start':this.safeintersection.SampleFetchingtime,\n                    'n':Number(this.safeintersection.dataperiod),\n                    'match':this.safeintersection.datatype!=\"用户特征早一个周期取数\",\n                    'path_host':this.safeintersection.hostselectedvalue,\n                    'path_guest':this.safeintersection.guestselectedvalue,\n                }\n            }\n            console.log(submit_info)\n            return http.post(\"Submit\",submit_info)\n        },\n        handleSub () {\n           \n            this.$refs.safeintersection.validate((valid) => {\n                if (valid) {\n                    this.$Message.success('Success!');\n                    // console.log(JSON.stringify(this.safeintersection));\n                    this.common.safeintersection=this.safeintersection\n                    // console.log(this.common.safeintersection)\n                } else {\n                    this.$Message.error('Fail!');\n                }\n            })\n        },\n        getdata(){\n            Promise.all([http.get(\"getDatainfo\")]).then(resList => {\n                resList.forEach((item)=>{\n                // console.log(item)\n                item.forEach((itemson)=>{\n                    // console.log(itemson.data_attribution)\n                    if(itemson.data_attribution==0){\n                    this.hostData.push(itemson)\n                    }else if(itemson.data_attribution==1){\n                    this.guestData.push(itemson)\n                    }\n                    })\n                \n                })\n            });\n        },\n      \n    },\n    mounted(){\n        this.getdata()\n    }\n}\n",{"version":3,"sources":["SafeIntersection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"SafeIntersection.vue","sourceRoot":"src/views/safeIntersection","sourcesContent":["<template>\n<div>\n \t  <div style=\"background:#eee;padding: 20px\" >\n        <Card :bordered=\"false\">\n            <p slot=\"title\">安全求交</p>\n            <p>当执行模型训练任务时，安全求交的输入来至用户设置的训练数据，包含1份样本/标签数据+1份用户特征，安全求交后生成一份结果数据作为特征工程的输入。本系统仅支持yyyymmdd这种格式的日期数据（如20191103）</p>\n        </Card>\n    </div>\n    <Form ref=\"safeintersection\" :model=\"safeintersection\" :rules=\"ruleValidate\" :label-width=\"80\">\n        <FormItem label=\"Host数据\" prop=\"hostselectedvalue\">\n            <Select v-model=\"safeintersection.hostselectedvalue\">\n                <Option v-for=\"item in hostData\" :value=\"item.data_path\" :key=\"item.data_id\">数据ID:{{item.data_id}}名称:{{ item.data_name }},类型:{{item.data_type==0?\"用户特征\":\"样本标签\"}}</Option>\n            </Select>\n        </FormItem>\n        <FormItem label=\"Guest数据\" prop=\"guestselectedvalue\">\n            <Select v-model=\"safeintersection.guestselectedvalue\">\n                <Option v-for=\"item in guestData\" :value=\"item.data_path\" :key=\"item.data_id\">数据ID:{{item.data_id}}名称:{{ item.data_name }},类型:{{item.data_type==0?\"用户特征\":\"样本标签\"}}</Option>\n            </Select>\n        </FormItem>\n        <FormItem label=\"取数时间\" prop=\"SampleFetchingtime\">\n            <Input v-model=\"safeintersection.SampleFetchingtime\" placeholder=\"请输入数据的取数时间\"></Input>\n        </FormItem>\n        <FormItem label=\"取数周期\" prop=\"dataperiod\">\n            <Input v-model=\"safeintersection.dataperiod\" placeholder=\"请输入数据的取数周期\"></Input>\n        </FormItem>\n        <FormItem label=\"取数规则\" prop=\"datatype\">\n            <Select v-model=\"safeintersection.datatype\" placeholder=\"请输入数据的取数取数规则\">\n                <Option value=\"用户特征早一个周期取数\">用户特征早一个周期取数</Option>\n                <Option value=\"样本标签和用户特征同一个周期取数\">样本标签和用户特征同一个周期取数</Option>\n            </Select>\n        </FormItem>\n        <FormItem>\n            <Button type=\"primary\" @click=\"handleSubmit\">Submit</Button>\n            <Button type=\"primary\" @click=\"handleSubmit2\">fateboard</Button>\n        </FormItem>\n    </Form>\n</div>\n</template>\n<script>\nimport http from '@/utils/http';\nimport { taskForm } from '@/store/module/studyTask';\nexport default {\n    data () {\n        return {\n            tabType: 'study',\n            hostData: [\n            ],\n            guestData: [],\n            taskForm,\n            taskRule: {},\n            safeintersection: {\n                SampleFetchingtime: this.common.safeintersection.SampleFetchingtime,\n                dataperiod: this.common.safeintersection.dataperiod,\n                datatype: this.common.safeintersection.datatype,\n                hostselectedvalue:this.common.safeintersection.hostselectedvalue,\n                guestselectedvalue:this.common.safeintersection.guestselectedvalue\n            },\n            ruleValidate: {\n                SampleFetchingtime: [\n                    { required: true, message: '取数时间不能为空', trigger: 'blur' }\n                ],\n                dataperiod: [\n                    { required: true, message: '取数周期不能为空', trigger: 'blur' },\n                ],\n                datatype: [\n                    { required: true, message: '取数规则不能为空', trigger: 'change' }\n                ],\n                hostselectedvalue: [\n                    { required: true, message: 'Host不能为空', trigger: 'change' }\n                ],\n                guestselectedvalue: [\n                    { required: true, message: 'Guest不能为空', trigger: 'change' }\n                ],\n            }\n        }\n    },\n    methods: {\n        handleSubmit2(){\n              this.$refs.safeintersection.validate((valid) => {\n                if (valid) {\n                    this.$Message.success('Success!');\n                    // console.log(JSON.stringify(this.safeintersection));\n                    // console.log(this.common.safeintersection)\n                     Promise.all([ this.createHttp()]).then(resList => {\n                        console.log(resList)\n                        resList.forEach(element => {\n                            console.log(element)\n                            if(element.status==0){\n                                window.open(element.result.board_url);\n                            }          \n                        });\n                    });\n                } else {\n                    this.$Message.error('Fail!');\n                }\n            })\n           \n        },\n        handleSubmit(){\n            setTimeout(this.handleSub(),10)\n           \n        },\n        createHttp () {\n            var submit_info = {\n                'name' : '安全求交'+ Date.parse(new Date()),\n                'role':this.common.coderole.role,\n                'task':'intersection',\n                'data':{\n                    'start':this.safeintersection.SampleFetchingtime,\n                    'n':Number(this.safeintersection.dataperiod),\n                    'match':this.safeintersection.datatype!=\"用户特征早一个周期取数\",\n                    'path_host':this.safeintersection.hostselectedvalue,\n                    'path_guest':this.safeintersection.guestselectedvalue,\n                }\n            }\n            console.log(submit_info)\n            return http.post(\"Submit\",submit_info)\n        },\n        handleSub () {\n           \n            this.$refs.safeintersection.validate((valid) => {\n                if (valid) {\n                    this.$Message.success('Success!');\n                    // console.log(JSON.stringify(this.safeintersection));\n                    this.common.safeintersection=this.safeintersection\n                    // console.log(this.common.safeintersection)\n                } else {\n                    this.$Message.error('Fail!');\n                }\n            })\n        },\n        getdata(){\n            Promise.all([http.get(\"getDatainfo\")]).then(resList => {\n                resList.forEach((item)=>{\n                // console.log(item)\n                item.forEach((itemson)=>{\n                    // console.log(itemson.data_attribution)\n                    if(itemson.data_attribution==0){\n                    this.hostData.push(itemson)\n                    }else if(itemson.data_attribution==1){\n                    this.guestData.push(itemson)\n                    }\n                    })\n                \n                })\n            });\n        },\n      \n    },\n    mounted(){\n        this.getdata()\n    }\n}\n</script>\n\n\n"]}]}