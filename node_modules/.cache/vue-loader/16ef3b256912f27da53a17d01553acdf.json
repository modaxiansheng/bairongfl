{"remainingRequest":"E:\\bairongfl\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\bairongfl\\node_modules\\@bairong\\jax-core\\src\\components\\BrMusic\\index.vue?vue&type=style&index=0&id=2023422c&lang=less&scoped=true&","dependencies":[{"path":"E:\\bairongfl\\node_modules\\@bairong\\jax-core\\src\\components\\BrMusic\\index.vue","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.music-wrap {\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    display: block;\r\n    clear: both;\r\n  }\r\n}\r\n\r\n.my-music {\r\n  float: left;\r\n  height: 30px;\r\n  padding: 6px;\r\n  background: #eee;\r\n\r\n  > div {\r\n    float: left;\r\n  }\r\n\r\n  .music-body {\r\n    width: 17px;\r\n    padding: 0 5px;\r\n  }\r\n\r\n  .music-length input[type=range] {\r\n    -webkit-appearance: none;\r\n\r\n    // 这个属性设置使填充进度条时的图形为圆角\r\n  }\r\n\r\n  .voice-range input {\r\n    width: 50px;\r\n    height: 20px;\r\n\r\n    &[type=range]::-webkit-slider-runnable-track {\r\n      height: 5px;\r\n      background: #0d1112;\r\n      // box-shadow: 0 1px 1px #def3f8, inset 0 .125em .125em #0d1112; // 轨道内置阴影效果\r\n    }\r\n\r\n    &[type=range]::-webkit-slider-thumb {\r\n      margin-top: -8px;\r\n    }\r\n  }\r\n\r\n  .music-length input {\r\n    width: 100%;\r\n    height: 2px;\r\n    margin-top: 10px;\r\n    background: transparent;\r\n\r\n    &[type=range]::-webkit-slider-runnable-track {\r\n      height: 2px;\r\n      margin-top: -7px;\r\n      background: #0d1112;\r\n      // box-shadow: 0 1px 1px #def3f8, inset 0 .125em .125em #0d1112; // 轨道内置阴影效果\r\n    }\r\n\r\n    &[type=range]::-webkit-slider-thumb {\r\n      -webkit-appearance: none;\r\n      height: 10px;\r\n      width: 10px;\r\n      margin-top: -5px;\r\n\r\n      // 使滑块超出轨道部分的偏移量相等\r\n      background: #fff;\r\n      border-radius: 50%;\r\n\r\n      // 外观设置为圆形\r\n      border: solid 0.125em rgba(205, 224, 230, 0.5);\r\n\r\n      // 设置边框\r\n      box-shadow: 0 0.125em 0.125em #3b4547;\r\n\r\n      // 添加底部阴影\r\n    }\r\n\r\n    &[type=range]:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  .music-duration {\r\n    padding: 0 10px;\r\n  }\r\n\r\n  .music-voice {\r\n    cursor: pointer;\r\n    position: relative;\r\n    width: 11px;\r\n  }\r\n\r\n  .voice-range {\r\n    transform: rotateZ(-90deg) translate3d(45px, -6px, 0);\r\n    position: absolute;\r\n    top: -4.5px;\r\n    right: -38px;\r\n    padding: 4px 10px;\r\n    cursor: auto;\r\n    z-index: 1000;\r\n    font-size: 0;\r\n    background: #eee;\r\n  }\r\n\r\n  .down-load-file {\r\n    margin-left: 10px;\r\n\r\n    .ivu-icon {\r\n      color: #495060;\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/@bairong/jax-core/src/components/BrMusic","sourcesContent":["<template>\r\n  <div class=\"music-wrap\">\r\n    <div class=\"my-music\">\r\n      <div class=\"music-body\">\r\n        <Icon type=\"play\" v-show=\"!audioToggle\" @click=\"musicToggle()\"></Icon>\r\n        <Icon type=\"pause\" v-show=\"audioToggle\" @click=\"musicToggle()\"></Icon>\r\n      </div>\r\n      <div class=\"music-length\">\r\n        <input type=\"range\" min=\"0\" max=\"100\" v-model=\"length\" @input=\"changeLength\">\r\n      </div>\r\n      <div class=\"music-duration\">\r\n        {{Math.floor(nowDuration/60)+':'+(nowDuration%60/100).toFixed(2).slice(-2)}}/{{Math.floor(duration/60)+':'+(duration%60/100).toFixed(2).slice(-2)}}\r\n      </div>\r\n      <div class=\"music-voice\">\r\n        <Icon v-show=\"+voice\" type=\"volume-high\" @click=\"voiceToggle\">\r\n        </Icon>\r\n        <Icon v-show=\"!+voice\" type=\"android-volume-off\" @click=\"voiceToggle\">\r\n        </Icon>\r\n        <div class=\"voice-range\" v-show=\"voiceShow\">\r\n          <input type=\"range\" min=\"0\" max=\"100\" v-model=\"voice\" @input=\"changeVoice()\">\r\n        </div>\r\n      </div>\r\n      <div class=\"down-load-file\" v-show=\"downLoadText\">\r\n        <a :href=\"src + paramsString()\" :download=\"downLoadText\">\r\n          <Icon type=\"archive\"></Icon>\r\n        </a>\r\n      </div>\r\n      <audio :ref=\"'audio' + id\" style=\"display:none;\" :src=\"musicUrl\" controls=\"controls\" type=\"audio/wav\">\r\n      </audio>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/**\r\n * @author jun.li@100credit.com\r\n * @prop { String } src 音频的请求路径(必填)\r\n * @prop { Object } params 请求参数\r\n * @prop { Number } initVolume 初始音量（1-100）\r\n * @prop { Boolean } autoPlay 是否自动播放\r\n * @prop { String } downLoadText 下载文件的名字（不传则不开启下载功能）\r\n *\r\n * @method musicToggle\r\n * @param { bool } 切换开关播放状态（不传参数默认切换到相反的状态）\r\n *\r\n * @event audioToggle 状态切换完后触发\r\n * @type { Boolean } 当前播放状态\r\n *\r\n * @event ended 音频播放完后触发\r\n * @type { Object } 当前音频的params用来区分结束的是哪个音频\r\n */\r\n\r\nimport xhr from '../utils/xhr';\r\n\r\nxhr.defaultConfig = {\r\n  responseType: 'arraybuffer'\r\n};\r\nlet id = 1; // 自增保证每个audio都是唯一的\r\nlet currentPlay = null; // 下次播放之前把正在播放的audio暂停\r\n\r\nexport default {\r\n  name: 'BrMusic',\r\n  props: {\r\n    // 请求路径\r\n    src: {\r\n      type: String,\r\n      require: true\r\n    },\r\n    // 请求参数\r\n    params: {\r\n      type: Object\r\n    },\r\n    // 初始音量\r\n    initVolume: {\r\n      type: Number,\r\n      default: 50\r\n    },\r\n    // 自动播放\r\n    autoPlay: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    downLoadText: {\r\n      type: String\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      audioToggle: false,\r\n      length: 0,\r\n      duration: null,\r\n      nowDuration: 0,\r\n      voiceShow: false,\r\n      voice: this.initVolume,\r\n      musicUrl: '',\r\n      id: 1\r\n    };\r\n  },\r\n  methods: {\r\n    // audio开关\r\n    musicToggle (bool) {\r\n      this.audioToggle = bool === undefined ? !this.audioToggle : bool;\r\n      if (this.audioToggle && !this.musicUrl) {\r\n        this.firstOpen().then(() => {\r\n          // 监听音乐正在播放\r\n          currentPlay && currentPlay.pause();\r\n          this.$refs['audio' + this.id].play();\r\n          currentPlay = this.$refs['audio' + this.id];\r\n          this.$refs['audio' + this.id].addEventListener('timeupdate', this.audioListener, true);\r\n          this.$refs['audio' + this.id].addEventListener('ended', () => {\r\n            this.$emit('ended', this.params);\r\n          }, false);\r\n        }, err => {\r\n          // console.log(err);\r\n          this.$emit('on-error', err);\r\n        });\r\n      } else {\r\n        if (this.audioToggle) {\r\n          currentPlay && currentPlay.pause();\r\n          this.$refs['audio' + this.id].play();\r\n          currentPlay = this.$refs['audio' + this.id];\r\n        } else {\r\n          this.$refs['audio' + this.id].pause();\r\n          currentPlay = null;\r\n        }\r\n        this.$emit('audioToggle', this.audioToggle);\r\n      }\r\n    },\r\n    // 请求音频文件\r\n    firstOpen () {\r\n      return xhr({\r\n        type: 'GET',\r\n        url: this.src,\r\n        data: this.params || {},\r\n        success: (res) => {\r\n          let audioBuffer = res.slice();\r\n          let ctx = new AudioContext();\r\n          ctx.decodeAudioData(audioBuffer, (buffer) => {\r\n            // 处理成功返回的数据类型为AudioBuffer\r\n            this.duration = buffer.duration;\r\n          }, (e) => {\r\n            // console.info('处理出错');\r\n            this.$emit('on-error', e);\r\n          });\r\n          let urlObject = window.URL || window.webkitURL || window;\r\n          let downloadData = new Blob([res], {type: 'audio/wav'});\r\n          this.musicUrl = urlObject.createObjectURL(downloadData);\r\n        },\r\n        error: function (err) {\r\n          // console.log(res);\r\n          this.$emit('on-error', err);\r\n        }\r\n      });\r\n    },\r\n    // 监听audio播放进度，单独写一个函数组件注销时移除监听事件\r\n    audioListener () {\r\n      // 修改目前的ranger位置\r\n      this.length = this.duration ? (this.$refs['audio' + this.id].currentTime * 100 / this.duration) : 0;\r\n      // 修改目前的播放时长\r\n      this.nowDuration = this.$refs['audio' + this.id].currentTime;\r\n      if (parseInt(this.nowDuration) >= parseInt(this.duration)) {\r\n        this.audioToggle = false;\r\n      }\r\n    },\r\n    changeLength () { // 调节进度\r\n      if (this.musicUrl) {\r\n        this.$refs['audio' + this.id].currentTime = this.length * this.duration / 100;\r\n      }\r\n    },\r\n    voiceToggle () { // 调节音量显示\r\n      if (this.musicUrl) {\r\n        this.voiceShow = !this.voiceShow;\r\n      }\r\n    },\r\n    changeVoice () { // 调节音量\r\n      this.$refs['audio' + this.id].volume = this.voice / 100;\r\n    },\r\n    paramsString () {\r\n      if (this.params) {\r\n        let string = '?';\r\n        for (let key in this.params) {\r\n          string += key + '=' + this.params[key] + '&';\r\n        }\r\n        return string.slice(0, -1);\r\n      }\r\n      return 'javascript:;';\r\n    }\r\n  },\r\n  mounted () {\r\n    this.id = id++;\r\n    if (this.autoPlay) {\r\n      this.musicToggle();\r\n    }\r\n  },\r\n  beforeDestroy () {\r\n    this.$refs['audio' + this.id].removeEventListener('timeupdate', this.audioListener, true);\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.music-wrap {\r\n  &::before,\r\n  &::after {\r\n    content: '';\r\n    display: block;\r\n    clear: both;\r\n  }\r\n}\r\n\r\n.my-music {\r\n  float: left;\r\n  height: 30px;\r\n  padding: 6px;\r\n  background: #eee;\r\n\r\n  > div {\r\n    float: left;\r\n  }\r\n\r\n  .music-body {\r\n    width: 17px;\r\n    padding: 0 5px;\r\n  }\r\n\r\n  .music-length input[type=range] {\r\n    -webkit-appearance: none;\r\n\r\n    // 这个属性设置使填充进度条时的图形为圆角\r\n  }\r\n\r\n  .voice-range input {\r\n    width: 50px;\r\n    height: 20px;\r\n\r\n    &[type=range]::-webkit-slider-runnable-track {\r\n      height: 5px;\r\n      background: #0d1112;\r\n      // box-shadow: 0 1px 1px #def3f8, inset 0 .125em .125em #0d1112; // 轨道内置阴影效果\r\n    }\r\n\r\n    &[type=range]::-webkit-slider-thumb {\r\n      margin-top: -8px;\r\n    }\r\n  }\r\n\r\n  .music-length input {\r\n    width: 100%;\r\n    height: 2px;\r\n    margin-top: 10px;\r\n    background: transparent;\r\n\r\n    &[type=range]::-webkit-slider-runnable-track {\r\n      height: 2px;\r\n      margin-top: -7px;\r\n      background: #0d1112;\r\n      // box-shadow: 0 1px 1px #def3f8, inset 0 .125em .125em #0d1112; // 轨道内置阴影效果\r\n    }\r\n\r\n    &[type=range]::-webkit-slider-thumb {\r\n      -webkit-appearance: none;\r\n      height: 10px;\r\n      width: 10px;\r\n      margin-top: -5px;\r\n\r\n      // 使滑块超出轨道部分的偏移量相等\r\n      background: #fff;\r\n      border-radius: 50%;\r\n\r\n      // 外观设置为圆形\r\n      border: solid 0.125em rgba(205, 224, 230, 0.5);\r\n\r\n      // 设置边框\r\n      box-shadow: 0 0.125em 0.125em #3b4547;\r\n\r\n      // 添加底部阴影\r\n    }\r\n\r\n    &[type=range]:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n\r\n  .music-duration {\r\n    padding: 0 10px;\r\n  }\r\n\r\n  .music-voice {\r\n    cursor: pointer;\r\n    position: relative;\r\n    width: 11px;\r\n  }\r\n\r\n  .voice-range {\r\n    transform: rotateZ(-90deg) translate3d(45px, -6px, 0);\r\n    position: absolute;\r\n    top: -4.5px;\r\n    right: -38px;\r\n    padding: 4px 10px;\r\n    cursor: auto;\r\n    z-index: 1000;\r\n    font-size: 0;\r\n    background: #eee;\r\n  }\r\n\r\n  .down-load-file {\r\n    margin-left: 10px;\r\n\r\n    .ivu-icon {\r\n      color: #495060;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}