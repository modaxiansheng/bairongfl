{"remainingRequest":"E:\\bairongfl\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\bairongfl\\src\\views\\studyTask\\StudyTask.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"E:\\bairongfl\\src\\views\\studyTask\\StudyTask.vue","mtime":1588759336330},{"path":"E:\\bairongfl\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.study-task-page {\n  .ivu-tabs-bar {\n    margin-bottom: 30px;\n  }\n}\n",{"version":3,"sources":["StudyTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+LA;AACA;AACA;AACA;AACA","file":"StudyTask.vue","sourceRoot":"src/views/studyTask","sourcesContent":["<template>\n  <div class=\"router-body study-task-page\">\n    <div class=\"router-body-inner\">\n      <Tabs type=\"card\" :animated=\"false\" v-model=\"tabType\" @on-click=\"tabClick\">\n        <TabPane label=\"训练任务\" name=\"study\"></TabPane>\n        <TabPane label=\"预测任务\" name=\"test\"></TabPane>\n      </Tabs>\n      <div style=\"position: relative\">\n        <Form ref=\"taskForm\" :model=\"taskForm\" :rules=\"taskRule\" :label-width=\"100\" style=\"width: 400px;\">\n          <FormItem label=\"Host方数据\" prop=\"host.namespace\">\n            <Select v-model=\"taskForm.host.namespace\">\n              <Option v-for=\"item in hostData\" :value=\"item.namespace\" :key=\"item.namespace\">{{ item.namespace }}</Option>\n            </Select>\n          </FormItem>\n          <FormItem label=\"\" prop=\"host.table_name\">\n            <Select v-model=\"taskForm.host.table_name\" filterable>\n              <Option v-for=\"item in getTableName(hostData, 'namespace', taskForm.host.namespace, 'table_name')\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n            </Select>\n          </FormItem>\n          <FormItem label=\"Guest方数据\" prop=\"guest.namespace\">\n            <Select v-model=\"taskForm.guest.namespace\">\n              <Option v-for=\"item in guestData\" :value=\"item.namespace\" :key=\"item.namespace\">{{ item.namespace }}</Option>\n            </Select>\n          </FormItem>\n          <FormItem label=\"\" prop=\"guest.table_name\">\n            <Select v-model=\"taskForm.guest.table_name\" filterable>\n              <Option v-for=\"item in getTableName(guestData, 'namespace', taskForm.guest.namespace, 'table_name')\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n            </Select>\n          </FormItem>\n          <FormItem v-show=\"tabType === 'study'\" label=\"选择模型\" prop=\"model_type\">\n            <RadioGroup v-model=\"taskForm.model_type\" vertical>\n              <Radio label=\"Hetero Logistic Regression\"></Radio>\n              <Radio label=\"Hetero Secureboost\"></Radio>\n            </RadioGroup>\n          </FormItem>\n          <div v-show=\"tabType !== 'study'\">\n            <FormItem label=\"选择模型\" prop=\"model.id\">\n              <Select v-model=\"taskForm.model.id\">\n                <Option v-for=\"item in modelInfo\" :value=\"item.model_id\" :key=\"item.model_id\">{{ item.model_id }}</Option>\n              </Select>\n            </FormItem>\n            <FormItem label=\"\" prop=\"model.version\" filterable>\n              <Select v-model=\"taskForm.model.version\" filterable>\n                <Option v-for=\"item in getTableName(modelInfo, 'model_id', taskForm.model.id, 'model_version')\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n              </Select>\n            </FormItem>\n          </div>\n          <FormItem label=\"\">\n            <Button type=\"primary\" :loading=\"btnLoading\" @click=\"handleSubmit\">提交{{tabType === 'study' ? '训练' : '预测'}}任务</Button>\n          </FormItem>\n        </Form>\n        <Spin fix v-if=\"tabPaneLoading\"/>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport http from '@/utils/http';\nimport { taskForm } from '@/store/module/studyTask';\n\nexport default {\n  name: 'StudyTask',\n  data () {\n    return {\n      tabType: 'study',\n      tabPaneLoading: false,\n      hostData: [\n      ],\n      guestData: [],\n      modelInfo: [],\n      btnLoading: false,\n      taskForm,\n      taskRule: {},\n      baseRule: {\n        'host.namespace': [\n          { required: true, message: '请选择Host方数据', trigger: 'change' }\n        ],\n        'host.table_name': [\n          { required: true, message: '请选择Host方数据', trigger: 'change' }\n        ],\n        'guest.namespace': [\n          { required: true, message: '请选择Guest方数据', trigger: 'change' }\n        ],\n        'guest.table_name': [\n          { required: true, message: '请选择Guest方数据', trigger: 'change' }\n        ]\n      },\n      studyRule: {\n        model_type: [\n          { required: true, message: '请选择模型', trigger: 'change' }\n        ]\n      },\n      testRule: {\n        'model.id': [\n          { required: true, message: '请选择模型', trigger: 'change' }\n        ],\n        'model.version': [\n          { required: true, message: '请选择模型版本', trigger: 'change' }\n        ]\n      }\n    };\n  },\n  methods: {\n    createHttp (role) {\n      const method = this.tabType === 'study' ? 'train' : 'predict';\n      return http.get('/getDatainfo', { params: { method, role } });\n    },\n    tabClick () {\n      this.taskForm = JSON.parse(JSON.stringify(taskForm));\n      this.$nextTick(() => {\n        this.$refs.taskForm.resetFields();\n      });\n      let loading = true;\n      this.tabPaneLoading = true;\n      if (!this.modelInfo.length && this.tabType !== 'study') {\n        http.get('/getModelinfo').then(res => {\n          this.modelInfo = res;\n          if (loading) {\n            loading = false;\n          } else {\n            this.tabPaneLoading = false;\n          }\n        });\n      } else {\n        loading = false;\n      }\n      Promise.all([this.createHttp('host'), this.createHttp('guest')]).then(resList => {\n        this.hostData = resList[0];\n        this.guestData = resList[1];\n        if (loading) {\n          loading = false;\n        } else {\n          this.tabPaneLoading = false;\n        }\n      });\n    },\n    getTableName (list, key, namespace, getName) {\n      if (list.length && namespace) {\n        const result = list.find(val => val[key] === namespace);\n        return result ? result[getName] : [];\n      } else {\n        return [];\n      }\n    },\n    handleSubmit () {\n      this.taskRule = Object.assign({}, this.baseRule, this.tabType === 'study' ? this.studyRule : this.testRule);\n      setTimeout(() => {\n        this.$refs.taskForm.validate(bool => {\n          if (!bool) {\n            return false;\n          }\n          this.btnLoading = true;\n          const params = {\n            data: {\n              host: this.taskForm.host,\n              guest: this.taskForm.guest\n            }\n          };\n          if (this.tabType === 'study') {\n            params.task = 'train';\n            params.model_type = this.taskForm.model_type;\n          } else {\n            params.task = 'predict';\n            params.model = this.taskForm.model;\n          }\n          http.post('/Submit', params).then(res => {\n            if (res.status === 1) {\n              localStorage.setItem('board_url', res.board_url);\n              this.$router.push({ name: 'resultPage', query: { redirect: '1' } });\n              this.btnLoading = false;\n            } else {\n              this.$Message.error(res.message);\n            }\n          });\n        });\n      }, 10);\n    }\n  },\n  created () {\n    this.taskRule = Object.assign({}, this.baseRule, this.studyRule, this.testRule);\n    this.tabClick();\n  },\n  mounted () {\n\n  }\n};\n\n</script>\n\n<style lang=\"less\">\n.study-task-page {\n  .ivu-tabs-bar {\n    margin-bottom: 30px;\n  }\n}\n</style>\n"]}]}