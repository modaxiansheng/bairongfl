{"remainingRequest":"E:\\fate\\federal-study-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\fate\\federal-study-vue\\node_modules\\@bairong\\jax\\src\\components\\layout\\common\\ownSpace\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\fate\\federal-study-vue\\node_modules\\@bairong\\jax\\src\\components\\layout\\common\\ownSpace\\index.vue","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport md5 from 'md5';\n\nexport default {\n  name: 'ownSapce',\n  components: {\n  },\n  props: {\n    isShowOwnSpace: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const validateOldPassword = (rule, value, callback) => {\n      if (/^\\s*$/g.test(value)) {\n        callback(new Error('请输入原密码'));\n      }\n      /* if (!/^(?![0-9_!@#$%^&*()]+$)(?![a-zA-Z_!@#$%^&*()]+$)(?![_!@#$%^&*()]+$)[0-9A-Za-z_!@#$%^&*()]{6,16}$/g.test(value)) {\n          callback(new Error(\"密码由6-16位数字和字母组成，且必须同时包含数字和字母！\"));\n        } */\n      callback();\n    };\n    const validateNewPassword = (rule, value, callback) => {\n      if (/^\\s*$/g.test(value)) {\n        callback(new Error('请输入新密码'));\n      }\n      if (!/^(?![0-9_!@#$%^&*()]+$)(?![a-zA-Z_!@#$%^&*()]+$)(?![_!@#$%^&*()]+$)[0-9A-Za-z_!@#$%^&*()]{6,16}$/g.test(value)) {\n        callback(new Error('密码由6-16位数字和字母组成，且必须同时包含数字和字母！'));\n      }\n      if (this.formPassword.oldPassword === this.formPassword.newPassword) {\n        callback(new Error('新旧密码不能相同'));\n      }\n      callback();\n    };\n\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (/^\\s*$/g.test(value)) {\n        callback(new Error('请输入确认密码'));\n      }\n      if (!/^(?![0-9_!@#$%^&*()]+$)(?![a-zA-Z_!@#$%^&*()]+$)(?![_!@#$%^&*()]+$)[0-9A-Za-z_!@#$%^&*()]{6,16}$/g.test(value)) {\n        callback(new Error('密码由6-16位数字和字母组成，且必须同时包含数字和字母！'));\n      }\n      if (this.formPassword.newPassword !== this.formPassword.confirmPassword) {\n        callback(new Error('两次输入密码必须相同'));\n      }\n      callback();\n    };\n\n    return {\n      saveLoading: false,\n      showModal: false,\n      formPassword: {\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      ruleValidate: {\n        oldPassword: [\n          { required: true, validator: validateOldPassword, trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, validator: validateNewPassword, trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, validator: validateConfirmPassword, trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  computed: {\n    userName () {\n      return this.$store.state.user.userName;\n    }\n\n  },\n  methods: {\n    /**\n     * 重置按钮\n     * */\n    resetLoading: function () {\n      this.saveLoading = true;\n      setTimeout(() => {\n        this.saveLoading = false;\n      }, 1500);\n    },\n    cancel: function () {\n      console.log('lineNum:', '114', 'class:', 'cancel');\n      this.resetFields();\n      this.$emit('hideOwnSpace');\n    },\n    resetFields: function () {\n      this.$refs['formPasswordValidate'].resetFields();\n    },\n    save: function (name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          let params = {\n            oldPassword: md5(this.formPassword.oldPassword),\n            newPassword: md5(this.formPassword.newPassword)\n          };\n          this.$store.dispatch('user/editPassword', params);\n        } else {\n          this.$Message.error('原密码为空或新密码格式有误！');\n          this.resetLoading();\n        }\n      });\n    }\n  },\n  mounted () {\n    this.showModal = this.isShowOwnSpace;\n  },\n  watch: {\n    isShowOwnSpace (val) {\n      this.showModal = val;\n    }\n  }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/@bairong/jax/src/components/layout/common/ownSpace","sourcesContent":["\n<template>\n  <div>\n    <Modal v-model=\"showModal\" :mask-closable=\"false\" width=\"500\" @on-cancel=\"cancel\">\n      <h3 slot=\"header\">修改密码</h3>\n      <Form :model=\"formPassword\" label-position=\"right\" :label-width=\"100\" ref=\"formPasswordValidate\"\n            :rules=\"ruleValidate\">\n        <FormItem label=\"用户名:\">\n          <span>{{userName}}</span>\n        </FormItem>\n        <FormItem label=\"原密码:\" prop=\"oldPassword\">\n          <Input type=\"password\" v-model=\"formPassword.oldPassword\" placeholder=\"请输入原密码\"/>\n        </FormItem>\n        <FormItem label=\"新密码:\" prop=\"newPassword\">\n          <Input type=\"password\" v-model=\"formPassword.newPassword\" placeholder=\"请输入新密码，必须同时包含数字和字母\"/>\n        </FormItem>\n        <FormItem label=\"确认密码:\" prop=\"confirmPassword\">\n          <Input type=\"password\" v-model=\"formPassword.confirmPassword\" placeholder=\"请输入确认密码\"/>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"primary\" :loading=\"saveLoading\" @click=\"save('formPasswordValidate')\">保存</Button>\n        <Button @click=\"cancel\">取消</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n<script>\nimport md5 from 'md5';\n\nexport default {\n  name: 'ownSapce',\n  components: {\n  },\n  props: {\n    isShowOwnSpace: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const validateOldPassword = (rule, value, callback) => {\n      if (/^\\s*$/g.test(value)) {\n        callback(new Error('请输入原密码'));\n      }\n      /* if (!/^(?![0-9_!@#$%^&*()]+$)(?![a-zA-Z_!@#$%^&*()]+$)(?![_!@#$%^&*()]+$)[0-9A-Za-z_!@#$%^&*()]{6,16}$/g.test(value)) {\n          callback(new Error(\"密码由6-16位数字和字母组成，且必须同时包含数字和字母！\"));\n        } */\n      callback();\n    };\n    const validateNewPassword = (rule, value, callback) => {\n      if (/^\\s*$/g.test(value)) {\n        callback(new Error('请输入新密码'));\n      }\n      if (!/^(?![0-9_!@#$%^&*()]+$)(?![a-zA-Z_!@#$%^&*()]+$)(?![_!@#$%^&*()]+$)[0-9A-Za-z_!@#$%^&*()]{6,16}$/g.test(value)) {\n        callback(new Error('密码由6-16位数字和字母组成，且必须同时包含数字和字母！'));\n      }\n      if (this.formPassword.oldPassword === this.formPassword.newPassword) {\n        callback(new Error('新旧密码不能相同'));\n      }\n      callback();\n    };\n\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (/^\\s*$/g.test(value)) {\n        callback(new Error('请输入确认密码'));\n      }\n      if (!/^(?![0-9_!@#$%^&*()]+$)(?![a-zA-Z_!@#$%^&*()]+$)(?![_!@#$%^&*()]+$)[0-9A-Za-z_!@#$%^&*()]{6,16}$/g.test(value)) {\n        callback(new Error('密码由6-16位数字和字母组成，且必须同时包含数字和字母！'));\n      }\n      if (this.formPassword.newPassword !== this.formPassword.confirmPassword) {\n        callback(new Error('两次输入密码必须相同'));\n      }\n      callback();\n    };\n\n    return {\n      saveLoading: false,\n      showModal: false,\n      formPassword: {\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      ruleValidate: {\n        oldPassword: [\n          { required: true, validator: validateOldPassword, trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, validator: validateNewPassword, trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, validator: validateConfirmPassword, trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  computed: {\n    userName () {\n      return this.$store.state.user.userName;\n    }\n\n  },\n  methods: {\n    /**\n     * 重置按钮\n     * */\n    resetLoading: function () {\n      this.saveLoading = true;\n      setTimeout(() => {\n        this.saveLoading = false;\n      }, 1500);\n    },\n    cancel: function () {\n      console.log('lineNum:', '114', 'class:', 'cancel');\n      this.resetFields();\n      this.$emit('hideOwnSpace');\n    },\n    resetFields: function () {\n      this.$refs['formPasswordValidate'].resetFields();\n    },\n    save: function (name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          let params = {\n            oldPassword: md5(this.formPassword.oldPassword),\n            newPassword: md5(this.formPassword.newPassword)\n          };\n          this.$store.dispatch('user/editPassword', params);\n        } else {\n          this.$Message.error('原密码为空或新密码格式有误！');\n          this.resetLoading();\n        }\n      });\n    }\n  },\n  mounted () {\n    this.showModal = this.isShowOwnSpace;\n  },\n  watch: {\n    isShowOwnSpace (val) {\n      this.showModal = val;\n    }\n  }\n};\n</script>\n"]}]}