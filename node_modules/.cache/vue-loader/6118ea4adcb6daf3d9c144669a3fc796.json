{"remainingRequest":"E:\\fate\\federal-study-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\fate\\federal-study-vue\\node_modules\\@bairong\\jax-core\\src\\components\\PBreadcrumb\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\fate\\federal-study-vue\\node_modules\\@bairong\\jax-core\\src\\components\\PBreadcrumb\\index.vue","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'PBreadcrumb',\n  props: {\n    separator: {\n      type: String,\n      default: '/'\n    }\n  },\n  created () {\n    this.getBreadData();\n  },\n  data () {\n    return {\n      dataList: []\n    };\n  },\n  watch: {\n    $route () {\n      this.getBreadData();\n    }\n  },\n  computed: {\n  },\n  methods: {\n    renderTitle (data) {\n      return data.meta && data.meta.title ? data.meta.title : '';\n    },\n    getBreadData () {\n      const rMatcheds = this.$route.matched.filter(item => (item.path || item.name || item.meta.disabled) && item.meta.title);\n      let arr = [...rMatcheds];\n      if (!arr || !arr.length) {\n        arr = [{ path: '/', name: '/', meta: { title: '/' } }].concat(arr);\n      }\n      const len = arr.length;\n      const newArr = arr.map((item, i) => {\n        const disabled = item.meta && item.meta.disabled;\n        item.path = disabled ? '' : i === (len - 1) ? this.$route.fullPath : item.path;\n        return item;\n      });\n      this.dataList = [...newArr];\n    }\n  }\n};\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/@bairong/jax-core/src/components/PBreadcrumb","sourcesContent":["<template>\n  <transition name='breadcrump'>\n    <Breadcrumb :separator='separator' class='p-breadcrump'>\n      <Icon custom=\"br-icon br-icon-home \" size=\"20\" style=\"margin-right: 5px\"></Icon>\n      <BreadcrumbItem v-for='item in dataList' :to='item.path' :key='item.path' >{{renderTitle(item)}}</BreadcrumbItem>\n      <!-- <BreadcrumbItem to='' key='' ></BreadcrumbItem>   -->\n    </Breadcrumb>\n  </transition>\n</template>\n\n<script>\nexport default {\n  name: 'PBreadcrumb',\n  props: {\n    separator: {\n      type: String,\n      default: '/'\n    }\n  },\n  created () {\n    this.getBreadData();\n  },\n  data () {\n    return {\n      dataList: []\n    };\n  },\n  watch: {\n    $route () {\n      this.getBreadData();\n    }\n  },\n  computed: {\n  },\n  methods: {\n    renderTitle (data) {\n      return data.meta && data.meta.title ? data.meta.title : '';\n    },\n    getBreadData () {\n      const rMatcheds = this.$route.matched.filter(item => (item.path || item.name || item.meta.disabled) && item.meta.title);\n      let arr = [...rMatcheds];\n      if (!arr || !arr.length) {\n        arr = [{ path: '/', name: '/', meta: { title: '/' } }].concat(arr);\n      }\n      const len = arr.length;\n      const newArr = arr.map((item, i) => {\n        const disabled = item.meta && item.meta.disabled;\n        item.path = disabled ? '' : i === (len - 1) ? this.$route.fullPath : item.path;\n        return item;\n      });\n      this.dataList = [...newArr];\n    }\n  }\n};\n</script>\n\n<style scoped>\n  .p-breadcrump {\n    padding: 12px 20px;\n    font-size: 14px;\n    border-bottom: 1px solid #F7F7F7;\n  }\n\n  .breadcrumb-enter,\n  .breadcrumb-leave-active {\n    opacity: 0;\n    transform: translateX(20px);\n  }\n\n  .breadcrumb-move {\n    transition: all .5s;\n  }\n\n  .breadcrumb-leave-active {\n    position: absolute;\n  }\n\n</style>\n"]}]}