{"remainingRequest":"E:\\bairongfl\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\bairongfl\\src\\views\\updataPage\\UpdataPage.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"E:\\bairongfl\\src\\views\\updataPage\\UpdataPage.vue","mtime":1589006130596},{"path":"E:\\bairongfl\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.updata-page {\n  .hidden-nav {\n    position: relative;\n    width: 100%;\n    height: 1280px;\n    overflow: hidden;\n  }\n  .iframe {\n    position: absolute;\n    top: -58px;\n    left: -180px;\n    width: 117%;\n    height: 120%;\n  }\n}\n",{"version":3,"sources":["UpdataPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UpdataPage.vue","sourceRoot":"src/views/updataPage","sourcesContent":["<template>\n  <div class=\"router-body updata-page\">\n    <div class=\"router-body-inner\">\n      <el-upload\n        class=\"upload-demo\"\n        ref=\"upload\"\n        :limit=\"1\"\n        name=\"articleImage\"\n        :file-list=\"fileList\"\n        :on-success=\"onSuccessData\"\n        action=\"http://192.168.1.113:9305/upload/image/uploadImg\"\n        :before-upload=\"beforeUpload\">\n          <el-button slot=\"trigger\" size=\"small\" type=\"primary\">选取文件</el-button>\n          <el-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\" @click=\"submitUpload\">上传到服务器</el-button>\n          <div slot=\"tip\" class=\"el-upload-list__item-name\">{{fileName}}</div>\n      </el-upload> \n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'updataPage',\n    methods:{\n      // 文件上传成功时触发的钩子函数\n      onSuccessData(response, file, fileList) {\n            console.log(response)\n            console.log(file)\n            console.log(fileList)\n      },\n      // 文件上传时的验证,自定义验证规则,\n      beforeUpload(file){\n            // debugger(打断点)\n            console.log(file,'文件');\n            this.files = file;\n            const extension = file.name.split('.')[1] === 'xls'\n            const extension2 = file.name.split('.')[1] === 'xlsx'\n            const isLt2M = file.size / 1024 / 1024 < 5\n            if (!extension && !extension2) {\n              this.$message.warning('上传模板只能是 xls、xlsx格式!')\n              return\n            }\n            if (!isLt2M) {\n              this.$message.warning('上传模板大小不能超过 5MB!')\n              return\n            }\n            this.fileName = file.name;\n            // return false // 返回false不会自动上传\n      },\n      // 手动上传文件到服务器\n      submitUpload() {\n        alert(1)\n        console.log('上传'+this.files.name)\n        if(this.fileName == \"\"){\n          this.$message.warning('请选择要上传的文件！')\n          return false\n        }\n        let fileFormData  = new FormData();\n        fileFormData.append('articleImage', this.files, this.fileName);//filename是键，file是值，就是要传的文件，test.zip是要传的文件名\n        let requestConfig = {\n          headers: {\n          'Content-Type': 'multipart/form-data'\n          },\n        }\n        this.$axios.post(`/upload/image/uploadImg`, fileFormData, requestConfig)\n        .then((res) => {\n          console.log('上传数据后返或数据')\n          console.log(res)\n          if (data && data.code === 0) {\n            this.$message({\n              message: '操作成功',\n              type: 'success',\n              duration: 1500,\n              onClose: () => {\n              this.visible = false\n              this.$emit('refreshDataList')\n              }\n              })\n          } else {\n          this.$message.error(data.msg)\n          }\n        }) \n      }\n    }\n  };\n</script>\n\n<style lang=\"less\">\n.updata-page {\n  .hidden-nav {\n    position: relative;\n    width: 100%;\n    height: 1280px;\n    overflow: hidden;\n  }\n  .iframe {\n    position: absolute;\n    top: -58px;\n    left: -180px;\n    width: 117%;\n    height: 120%;\n  }\n}\n</style>\n\n"]}]}