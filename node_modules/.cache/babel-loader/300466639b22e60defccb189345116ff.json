{"remainingRequest":"E:\\bairongfl\\node_modules\\babel-loader\\lib\\index.js!E:\\bairongfl\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\bairongfl\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\bairongfl\\src\\views\\historicalTasks\\HistoricalTasks.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\bairongfl\\src\\views\\historicalTasks\\HistoricalTasks.vue","mtime":1592460906436},{"path":"E:\\bairongfl\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport http from '@/utils/http';\nexport default {\n  data: function data() {\n    var _this = this;\n\n    return {\n      params: \"\",\n      modal1: false,\n      page: {\n        total: 0,\n        index: 1,\n        size: 10\n      },\n      columns1: [{\n        key: 'job_id',\n        title: '任务编号',\n        sortable: true\n      }, {\n        key: 'job_name',\n        title: '任务名称'\n      }, {\n        key: 'model_version',\n        title: '模型名称',\n        sortable: true\n      }, {\n        key: 'job_type',\n        title: '训练类型',\n        sortable: true\n      }, {\n        key: 'job_attribution',\n        title: '任务归属',\n        sortable: true\n      }, {\n        key: 'job_create_time',\n        title: '创建时间',\n        sortable: true\n      }, {\n        title: 'Action',\n        key: 'action',\n        width: 300,\n        align: 'center',\n        render: function render(h, params) {\n          return h('div', [h('Button', {\n            props: {\n              type: 'error',\n              size: 'small'\n            },\n            on: {\n              click: function click() {\n                _this.modal1 = true;\n                console.log(_this);\n                _this.params = params;\n              }\n            }\n          }, 'Delete'), h('Button', {\n            props: {\n              type: 'primary',\n              size: 'small'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this.show(params.index);\n              }\n            }\n          }, 'View'), h('Button', {\n            props: {\n              type: 'primary',\n              size: 'small'\n            },\n            style: {\n              marginRight: '5px'\n            },\n            on: {\n              click: function click() {\n                _this.result(params.index);\n              }\n            }\n          }, 'result')]);\n        }\n      }],\n      data1: [],\n      datason: [],\n      datasons: []\n    };\n  },\n  methods: {\n    result: function result(index) {\n      // this.$router.push(this.datasons[index].board_url) \n      window.open(this.datasons[index].board_url);\n    },\n    show: function show(index) {\n      this.$router.push({\n        name: 'historicalParams',\n        params: JSON.parse(this.datasons[index].param)\n      });\n    },\n    ok: function ok() {\n      this.$Message.info('Clicked ok');\n      this.remove(this.params);\n    },\n    cancel: function cancel() {\n      this.$Message.info('Clicked cancel');\n    },\n    remove: function remove(params) {\n      // console.log(params)\n      if (params.row.job_attribution == this.common.coderole.role) {\n        this.datasons.splice(params.index, 1);\n        console.log(params);\n        http.get('deleteTaskinfo?job_id=' + params.row.job_id);\n        location.reload();\n      }\n    },\n    changepage: function changepage(index) {\n      var _start = (index - 1) * this.page.size;\n\n      var _end = index * this.page.size;\n\n      this.datasons = this.datason.slice(_start, _end);\n    },\n    getdata: function getdata() {\n      var _this2 = this;\n\n      Promise.all([http.get(\"getTaskinfo\")]).then(function (resList) {\n        _this2.data1 = resList; // resList.forEach((item)=>{\n        // console.log(item)\n        // })\n\n        _this2.datason = [];\n\n        _this2.data1.forEach(function (item) {\n          Array.prototype.push.apply(_this2.datason, item);\n        }); // console.log(this.datason)\n\n\n        _this2.page.total = _this2.datason.length; // 初始化显示，小于每页显示条数，全显，大于每页显示条数，取前每页条数显示\n\n        if (_this2.datason.length < _this2.page.size) {\n          _this2.datasons = _this2.datason;\n        } else {\n          _this2.datasons = _this2.datason.slice(0, _this2.page.size);\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getdata();\n  }\n};",{"version":3,"sources":["HistoricalTasks.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div id=\"historicaltask\">\n\t<div style=\"background:#eee;padding: 20px\" >\n        <Card :bordered=\"false\">\n            <p slot=\"title\">历史任务</p>\n            <p>安全求交参数配置，特征工程参数配置和算法参数配置</p>\n        </Card>\n \t</div>\n\t<Table border :columns=\"columns1\" :data=\"datasons\"></Table>\n    <Page :total=\"page.total\" :page-size=\"page.size\" show-total  @on-change=\"changepage\"></Page>\n\t<Modal\n        v-model=\"modal1\"\n        title=\"您确定要删除吗\"\n        @on-ok=\"ok\"\n        @on-cancel=\"cancel\">\n        <p>您只能删除您注册的数据</p>\n        <p>点击确定就会删除</p>\n        <p>点击取消就不会删除</p>\n    </Modal>\n</div>\n</template>\n<script>\nimport http from '@/utils/http';\nexport default {\n\tdata(){\n\t\treturn {\n\n\t\t\tparams:\"\",\n\t\t\tmodal1:false,\n\t\t\tpage:{\n\t\t\t\ttotal:0,\n\t\t\t\tindex:1,\n\t\t\t\tsize:10\n\t\t\t},\n\t\t\tcolumns1: [\n\t\t\t\t{\n\t\t\t\t\tkey: 'job_id',\n\t\t\t\t\ttitle: '任务编号',\n\t\t\t\t\tsortable: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'job_name',\n\t\t\t\t\ttitle: '任务名称'\n        \t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'model_version',\n\t\t\t\t\ttitle: '模型名称',\n\t\t\t\t\tsortable: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'job_type',\n\t\t\t\t\ttitle: '训练类型',\n\t\t\t\t\tsortable: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'job_attribution',\n\t\t\t\t\ttitle: '任务归属',\n\t\t\t\t\tsortable: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tkey: 'job_create_time',\n\t\t\t\t\ttitle: '创建时间',\n\t\t\t\t\tsortable: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttitle: 'Action',\n\t\t\t\t\tkey: 'action',\n\t\t\t\t\twidth: 300,\n\t\t\t\t\talign: 'center',\n\t\t\t\t\trender: (h, params) => {\n\t\t\t\t\t\treturn h('div', [\n\t\t\t\t\t\t\th('Button', {\n\t\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t\tsize: 'small'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\ton: {\n\t\t\t\t\t\t\t\t\tclick: () => {\n\t\t\t\t\t\t\t\t\t\tthis.modal1 = true\n\t\t\t\t\t\t\t\t\t\tconsole.log(this)\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tthis.params=params\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, 'Delete'),\n\t\t\t\t\t\t\th('Button', {\n                                    props: {\n                                        type: 'primary',\n                                        size: 'small'\n                                    },\n                                    style: {\n                                        marginRight: '5px'\n                                    },\n                                    on: {\n                                        click: () => {\n                                            this.show(params.index)\n                                        }\n                                    }\n\t\t\t\t\t\t\t}, 'View'),\n\t\t\t\t\t\t\th('Button', {\n                                    props: {\n                                        type: 'primary',\n                                        size: 'small'\n                                    },\n                                    style: {\n                                        marginRight: '5px'\n                                    },\n                                    on: {\n                                        click: () => {\n                                            this.result(params.index)\n                                        }\n                                    }\n                            }, 'result'),\n\t\t\t\t\t\t]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t],\n\t\t\tdata1: [],\n\t\t\tdatason:[],\n\t\t\tdatasons:[]\n\t\t}\n\t},\n\tmethods:{\n\t\tresult(index){\n\t\t\t// this.$router.push(this.datasons[index].board_url) \n\t\t\twindow.open(this.datasons[index].board_url);\n\t\t},\n\t\tshow(index){\n\t\t\tthis.$router.push({name:'historicalParams', params: JSON.parse(this.datasons[index].param) }) \n\t\t},\n\t\tok () {\n\t\t\tthis.$Message.info('Clicked ok');\n\t\t\tthis.remove(this.params)\n\t\t},\n\t\tcancel () {\n\t\t\tthis.$Message.info('Clicked cancel');\n\t\t},\n\t\tremove (params) {\n\t\t\t// console.log(params)\n\t\t\tif(params.row.job_attribution==this.common.coderole.role){\n\t\t\t\tthis.datasons.splice(params.index, 1);\n\t\t\t\tconsole.log(params)\n\t\t\t\thttp.get('deleteTaskinfo?job_id='+params.row.job_id)\n                location.reload()\n\n\t\t\t}\n\t\t},\n\t\tchangepage(index){\n\t\t\tvar _start = ( index - 1 ) * this.page.size;\n\t\t\tvar _end = index * this.page.size;\n\t\t\tthis.datasons = this.datason.slice(_start,_end);\n\n\t\t},\n\t\tgetdata(){\n            Promise.all([http.get(\"getTaskinfo\")]).then(resList => {\n\t\t\t\tthis.data1=resList\n                // resList.forEach((item)=>{\n                // console.log(item)\n               \n                \n\t\t\t\t// })\n\t\t\t\tthis.datason = [];\n\t\t\t\tthis.data1.forEach((item)=>{\n\t\t\t\t\tArray.prototype.push.apply(this.datason, item);\n\t\t\t\t})\n\t\t\t\t// console.log(this.datason)\n\t\t\t\tthis.page.total=this.datason.length\n\n\t\t\t\t// 初始化显示，小于每页显示条数，全显，大于每页显示条数，取前每页条数显示\n                if(this.datason.length < this.page.size){\n                    this.datasons = this.datason;\n                }else{\n                    this.datasons = this.datason.slice(0,this.page.size);\n                }\n\t\t\t});\n\t\t\n        },\n\t},\n\tmounted(){\n\t\tthis.getdata()\n\t}  \n}\n</script>\n\n<style scoped>\n#historicaltask{\n\twidth: 100%;\n\toverflow: hidden;\n}\n#addtask{\n\twidth: 100px;\n\theight: 25px;\n\tborder: 1px solid blue;\n\tbackground-color: blue;\n\tcolor: white;\n\tmargin: 10px;\n\ttext-align:center;\n\tline-height: 25px;\n}\n#save{\n\twidth: 50px;\n\theight: 25px;\n\tborder: 1px solid blue;\n\tbackground-color: blue;\n\tcolor: white;\n\tmargin: 10px;\n\ttext-align:center;\n\tline-height: 25px;\n}\n</style>\n\n"],"sourceRoot":"src/views/historicalTasks"}]}