{"remainingRequest":"E:\\fate\\federal-study-vue\\node_modules\\babel-loader\\lib\\index.js!E:\\fate\\federal-study-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\fate\\federal-study-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\fate\\federal-study-vue\\node_modules\\@bairong\\jax\\src\\components\\table\\TableMergeCell.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\fate\\federal-study-vue\\node_modules\\@bairong\\jax\\src\\components\\table\\TableMergeCell.vue","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"E:\\\\fate\\\\federal-study-vue\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/**\n * 合并相邻的数据，根据列参数中配置的merge\n * 参数说明：\n * columns 列参数中包含 merge  如  {merge : \"firstTypeRowSpan\"}\n * data 数组数据按照 merge包含列，按照要合并的字段排序 。\n * height 默认不设置会根据内容高度显示表格高度;设置如300px给指定高度后，表格会自动固定表头,当纵向内容过多时显示滚动条。\n * 2019.3.1\n * hl\n */\nimport RunFunction from \"./runRender\";\nexport default {\n  name: 'TableMergeCell',\n  components: {\n    RunFunction: RunFunction\n  },\n  props: {\n    columns: Array,\n    data: Array,\n    height: {\n      default: 'auto'\n    }\n  },\n  methods: {\n    setData: function setData(rdata) {\n      if (this.columns.length > 0) {\n        for (var c = 0; c < this.columns.length; c++) {\n          var row = this.columns[c]; // row {merge : \"firstTypeRowSpan\"} 存在要合并该列下面的相同的多条数据为一个单元格，firstTypeRowSpan 做为数据源中的统计数量字段要不一定要唯一\n          // 要求按照合并的数据排序，即 一样的数据上下相邻合并。\n\n          if (row.hasOwnProperty('merge')) {\n            var obj = {};\n\n            for (var i = 0; i < rdata.length; i++) {\n              var item = rdata[i];\n              var celVal = _typeof(item[row.key]) + item[row.key];\n\n              if (obj[celVal] === undefined) {\n                obj[celVal] = 1;\n              } else {\n                obj[celVal]++; // 要求数据相邻统计\n              }\n            }\n\n            for (var j = 0; j < rdata.length; j++) {\n              var itemO = this.data[j];\n\n              for (var k in obj) {\n                if (_typeof(itemO[row.key]) + itemO[row.key] === k) {\n                  // obj中的key是字符类型\n                  // console.log(itemO[row.key], typeof itemO[row.key], '  ==  ', k, typeof k, obj);\n                  itemO[row.key + '_RowCount'] = obj[k];\n                  break;\n                }\n              }\n\n              if (itemO[row.key + '_RowCount'] > 1) {\n                // console.log(66, itemO[row.key], '  ==  ', itemO[row.key + '_RowCount'], j, row);\n                if (j === 0) {\n                  itemO[row.merge + '_column_' + c] = itemO[row.key + '_RowCount'];\n                } else if (itemO[row.key] === rdata[j - 1][row.key]) {\n                  itemO[row.merge + '_column_' + c] = 0;\n                } else {\n                  itemO[row.merge + '_column_' + c] = itemO[row.key + '_RowCount'];\n                }\n              }\n            }\n          } // if (row.hasOwnProperty('merge')\n\n        }\n      } // this.data = rdata;\n\n\n      return rdata;\n    }\n  },\n  computed: {\n    groupData: function groupData() {\n      return this.setData(this.data);\n    }\n  }\n};",{"version":3,"sources":["TableMergeCell.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <table class=\"mytable\" style=\"margin-bottom: -2px;\">\n      <tr>\n        <th v-for=\"(cols,index) in columns\" :width=\"cols.width\" :key=\"index+1\">{{ cols.title || '' }}</th>\n      </tr>\n      <tr class=\"rowHidden\" v-if=\"index<1\" v-for=\"(row, index) in groupData\" :key=\"index+1\">\n        <td v-for=\"(column,cIndex) in columns\" :key=\"cIndex+1\" :rowspan=\"row[column.merge+'_column_'+cIndex]\" v-if=\"row[column.merge+'_column_'+cIndex] != 0\">\n          <span v-if=\"String(row[column.key]).substr(0,1) == '<'\" v-html=\"row[column.key]\"></span>\n          <span v-else-if=\"typeof row[column.key] === 'function'\">\n            <RunFunction style=\"height: 0px\" :row=\"row\" :column=\"column\"  :index=\"0\"  :render=\"row[column.key]\"></RunFunction>\n          </span>\n          <span v-else-if=\"typeof column.render === 'function'\">\n            <RunFunction style=\"height: 0px\" :row=\"row\" :column=\"column\"  :index=\"0\"  :render=\"column.render\"></RunFunction>\n          </span>\n          <span v-else >{{row[column.key]}}</span>\n        </td>\n      </tr>\n      <tr v-if=\"!groupData || groupData.length === 0\">\n        <td style=\"text-align: center;\" :colspan=\"columns.length\">...</td>\n      </tr>\n    </table>\n    <div v-if=\"groupData && groupData.length != 0\" :style=\"{'max-height': height, 'overflow-y':'auto'}\">\n    <table class=\"mytable\" style=\"margin-top: -3px;\">\n        <tr class=\"rowHidden\">\n          <th v-for=\"(cols,index) in columns\" :width=\"cols.width\" :key=\"index+1\">{{ cols.title || '' }}</th>\n        </tr>\n        <tr v-for=\"(row, index) in groupData\" :key=\"index+1\">\n        <td v-for=\"(column,cIndex) in columns\" :key=\"cIndex+1\" :rowspan=\"row[column.merge+'_column_'+cIndex]\" v-if=\"row[column.merge+'_column_'+cIndex] != 0\">\n          <span v-if=\"String(row[column.key]).substr(0,1) == '<'\" v-html=\"row[column.key]\"></span>\n          <span v-else-if=\"typeof row[column.key] === 'function'\">\n            <RunFunction :row=\"row\" :column=\"column\"  :index=\"index\"  :render=\"row[column.key]\"></RunFunction>\n          </span>\n          <span v-else-if=\"typeof column.render === 'function'\">\n            <RunFunction :row=\"row\" :column=\"column\"  :index=\"index\"  :render=\"column.render\"></RunFunction>\n          </span>\n          <span v-else >{{row[column.key]}}</span>\n        </td>\n      </tr>\n    </table>\n    </div>\n  </div>\n</template>\n<script>\n/**\n * 合并相邻的数据，根据列参数中配置的merge\n * 参数说明：\n * columns 列参数中包含 merge  如  {merge : \"firstTypeRowSpan\"}\n * data 数组数据按照 merge包含列，按照要合并的字段排序 。\n * height 默认不设置会根据内容高度显示表格高度;设置如300px给指定高度后，表格会自动固定表头,当纵向内容过多时显示滚动条。\n * 2019.3.1\n * hl\n */\nimport RunFunction from './runRender';\nexport default {\n  name: 'TableMergeCell',\n  components: {RunFunction},\n  props: {columns: Array, data: Array, height: {default: 'auto'}},\n  methods: {\n    setData (rdata) {\n      if (this.columns.length > 0) {\n        for (var c = 0; c < this.columns.length; c++) {\n          var row = this.columns[c];\n          // row {merge : \"firstTypeRowSpan\"} 存在要合并该列下面的相同的多条数据为一个单元格，firstTypeRowSpan 做为数据源中的统计数量字段要不一定要唯一\n          // 要求按照合并的数据排序，即 一样的数据上下相邻合并。\n          if (row.hasOwnProperty('merge')) {\n            var obj = {};\n            for (var i = 0; i < rdata.length; i++) {\n              var item = rdata[i];\n              var celVal = typeof item[row.key] + item[row.key];\n              if (obj[celVal] === undefined) {\n                obj[celVal] = 1;\n              } else {\n                obj[celVal]++; // 要求数据相邻统计\n              }\n            }\n            for (var j = 0; j < rdata.length; j++) {\n              var itemO = this.data[j];\n              for (var k in obj) {\n                if (typeof itemO[row.key] + itemO[row.key] === k) { // obj中的key是字符类型\n                  // console.log(itemO[row.key], typeof itemO[row.key], '  ==  ', k, typeof k, obj);\n                  itemO[row.key + '_RowCount'] = obj[k];\n                  break;\n                }\n              }\n              if (itemO[row.key + '_RowCount'] > 1) {\n                // console.log(66, itemO[row.key], '  ==  ', itemO[row.key + '_RowCount'], j, row);\n                if (j === 0) {\n                  itemO[row.merge + '_column_' + c] = itemO[row.key + '_RowCount'];\n                } else if (itemO[row.key] === rdata[j - 1][row.key]) {\n                  itemO[row.merge + '_column_' + c] = 0;\n                } else {\n                  itemO[row.merge + '_column_' + c] = itemO[row.key + '_RowCount'];\n                }\n              }\n            }\n          } // if (row.hasOwnProperty('merge')\n        }\n      }\n      // this.data = rdata;\n      return rdata;\n    }\n  },\n  computed: {\n    groupData: function () {\n      return this.setData(this.data);\n    }\n  }\n};\n</script>\n<style lang=\"less\" scoped>\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  .mytable {\n    width: 100%;\n    margin: 0;\n    border-collapse: collapse;\n    border-spacing: 0;\n    empty-cells: show;\n    border: 1px solid #dededf;\n    thead, tbody {\n      display: table-header-group;\n      vertical-align: middle;\n      border-color: inherit;\n    }\n    thead {\n      width: 100%;\n      background-color: #DDDEE2;\n      tr {\n        width: 100%;\n      }\n      th {\n        padding: 12px 18px;\n      }\n    }\n    tbody {\n      width: 100%;\n      tr {\n        width: 100%;\n        &:hover {\n          background-color: #ebf7ff;\n        }\n      }\n    }\n    td {\n      max-width: 400px;\n      padding: 12px 18px;\n      border: 1px solid #e9eaec;\n      text-align: left;\n    }\n\n    th {\n      background-color: #F0F1F5;\n      padding: 12px 18px;\n      text-align: left;\n    }\n    .rowHidden {\n      line-height: 1px;\n      height: 1px;\n      visibility: hidden;\n      th, td {\n        visibility: hidden;\n        line-height: 1px;\n        padding: 0 18px;\n        height: 1px;\n        span {\n          padding: 0 !important;\n          margin: 0 !important;\n          ul li {\n            line-height: 0px;\n            padding: 0 !important;\n            margin: 0 !important;\n          }\n        }\n      }\n    }\n  }\n</style>\n"],"sourceRoot":"node_modules/@bairong/jax/src/components/table"}]}