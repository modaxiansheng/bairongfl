{"remainingRequest":"E:\\fate\\federal-study-vue\\node_modules\\babel-loader\\lib\\index.js!E:\\fate\\federal-study-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\fate\\federal-study-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\fate\\federal-study-vue\\src\\views\\studyTask\\StudyTask.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\fate\\federal-study-vue\\src\\views\\studyTask\\StudyTask.vue","mtime":1588749255738},{"path":"E:\\fate\\federal-study-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\fate\\federal-study-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport http from '@/utils/http';\nimport { taskForm } from '@/store/module/studyTask';\nexport default {\n  name: 'StudyTask',\n  data: function data() {\n    return {\n      tabType: 'study',\n      tabPaneLoading: false,\n      hostData: [],\n      guestData: [],\n      modelInfo: [],\n      btnLoading: false,\n      taskForm: taskForm,\n      taskRule: {},\n      baseRule: {\n        'host.namespace': [{\n          required: true,\n          message: '请选择Host方数据',\n          trigger: 'change'\n        }],\n        'host.table_name': [{\n          required: true,\n          message: '请选择Host方数据',\n          trigger: 'change'\n        }],\n        'guest.namespace': [{\n          required: true,\n          message: '请选择Guest方数据',\n          trigger: 'change'\n        }],\n        'guest.table_name': [{\n          required: true,\n          message: '请选择Guest方数据',\n          trigger: 'change'\n        }]\n      },\n      studyRule: {\n        model_type: [{\n          required: true,\n          message: '请选择模型',\n          trigger: 'change'\n        }]\n      },\n      testRule: {\n        'model.id': [{\n          required: true,\n          message: '请选择模型',\n          trigger: 'change'\n        }],\n        'model.version': [{\n          required: true,\n          message: '请选择模型版本',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  methods: {\n    createHttp: function createHttp(role) {\n      var method = this.tabType === 'study' ? 'train' : 'predict';\n      return http.get('/getDatainfo', {\n        params: {\n          method: method,\n          role: role\n        }\n      });\n    },\n    tabClick: function tabClick() {\n      var _this = this;\n\n      this.taskForm = JSON.parse(JSON.stringify(taskForm));\n      this.$nextTick(function () {\n        _this.$refs.taskForm.resetFields();\n      });\n      var loading = true;\n      this.tabPaneLoading = true;\n\n      if (!this.modelInfo.length && this.tabType !== 'study') {\n        http.get('/getModelinfo').then(function (res) {\n          _this.modelInfo = res;\n\n          if (loading) {\n            loading = false;\n          } else {\n            _this.tabPaneLoading = false;\n          }\n        });\n      } else {\n        loading = false;\n      }\n\n      Promise.all([this.createHttp('host'), this.createHttp('guest')]).then(function (resList) {\n        _this.hostData = resList[0];\n        _this.guestData = resList[1];\n\n        if (loading) {\n          loading = false;\n          console.log(\"11111\");\n        } else {\n          _this.tabPaneLoading = false;\n        }\n      });\n    },\n    getTableName: function getTableName(list, key, namespace, getName) {\n      if (list.length && namespace) {\n        var result = list.find(function (val) {\n          return val[key] === namespace;\n        });\n        return result ? result[getName] : [];\n      } else {\n        return [];\n      }\n    },\n    handleSubmit: function handleSubmit() {\n      var _this2 = this;\n\n      this.taskRule = Object.assign({}, this.baseRule, this.tabType === 'study' ? this.studyRule : this.testRule);\n      setTimeout(function () {\n        _this2.$refs.taskForm.validate(function (bool) {\n          if (!bool) {\n            return false;\n          }\n\n          _this2.btnLoading = true;\n          var params = {\n            data: {\n              host: _this2.taskForm.host,\n              guest: _this2.taskForm.guest\n            }\n          };\n\n          if (_this2.tabType === 'study') {\n            params.task = 'train';\n            params.model_type = _this2.taskForm.model_type;\n          } else {\n            params.task = 'predict';\n            params.model = _this2.taskForm.model;\n          }\n\n          http.post('/Submit', params).then(function (res) {\n            if (res.status === 1) {\n              localStorage.setItem('board_url', res.board_url);\n\n              _this2.$router.push({\n                name: 'resultPage',\n                query: {\n                  redirect: '1'\n                }\n              });\n\n              _this2.btnLoading = false;\n            } else {\n              _this2.$Message.error(res.message);\n            }\n          });\n        });\n      }, 10);\n    }\n  },\n  created: function created() {\n    this.taskRule = Object.assign({}, this.baseRule, this.studyRule, this.testRule);\n    this.tabClick();\n  }\n};",{"version":3,"sources":["StudyTask.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"router-body study-task-page\">\n    <div class=\"router-body-inner\">\n      <Tabs type=\"card\" :animated=\"false\" v-model=\"tabType\" @on-click=\"tabClick\">\n        <TabPane label=\"训练任务\" name=\"study\"></TabPane>\n        <TabPane label=\"预测任务\" name=\"test\"></TabPane>\n      </Tabs>\n      <div style=\"position: relative\">\n        <Form ref=\"taskForm\" :model=\"taskForm\" :rules=\"taskRule\" :label-width=\"100\" style=\"width: 400px;\">\n          <FormItem label=\"Host方数据\" prop=\"host.namespace\">\n            <Select v-model=\"taskForm.host.namespace\">\n              <Option v-for=\"item in hostData\" :value=\"item.namespace\" :key=\"item.namespace\">{{ item.namespace }}</Option>\n            </Select>\n          </FormItem>\n          <FormItem label=\"\" prop=\"host.table_name\">\n            <Select v-model=\"taskForm.host.table_name\" filterable>\n              <Option v-for=\"item in getTableName(hostData, 'namespace', taskForm.host.namespace, 'table_name')\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n            </Select>\n          </FormItem>\n          <FormItem label=\"Guest方数据\" prop=\"guest.namespace\">\n            <Select v-model=\"taskForm.guest.namespace\">\n              <Option v-for=\"item in guestData\" :value=\"item.namespace\" :key=\"item.namespace\">{{ item.namespace }}</Option>\n            </Select>\n          </FormItem>\n          <FormItem label=\"\" prop=\"guest.table_name\">\n            <Select v-model=\"taskForm.guest.table_name\" filterable>\n              <Option v-for=\"item in getTableName(guestData, 'namespace', taskForm.guest.namespace, 'table_name')\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n            </Select>\n          </FormItem>\n          <FormItem v-show=\"tabType === 'study'\" label=\"选择模型\" prop=\"model_type\">\n            <RadioGroup v-model=\"taskForm.model_type\" vertical>\n              <Radio label=\"Hetero Logistic Regression\"></Radio>\n              <Radio label=\"Hetero Secureboost\"></Radio>\n            </RadioGroup>\n          </FormItem>\n          <div v-show=\"tabType !== 'study'\">\n            <FormItem label=\"选择模型\" prop=\"model.id\">\n              <Select v-model=\"taskForm.model.id\">\n                <Option v-for=\"item in modelInfo\" :value=\"item.model_id\" :key=\"item.model_id\">{{ item.model_id }}</Option>\n              </Select>\n            </FormItem>\n            <FormItem label=\"\" prop=\"model.version\" filterable>\n              <Select v-model=\"taskForm.model.version\" filterable>\n                <Option v-for=\"item in getTableName(modelInfo, 'model_id', taskForm.model.id, 'model_version')\" :value=\"item\" :key=\"item\">{{ item }}</Option>\n              </Select>\n            </FormItem>\n          </div>\n          <FormItem label=\"\">\n            <Button type=\"primary\" :loading=\"btnLoading\" @click=\"handleSubmit\">提交{{tabType === 'study' ? '训练' : '预测'}}任务</Button>\n          </FormItem>\n        </Form>\n        <Spin fix v-if=\"tabPaneLoading\"/>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport http from '@/utils/http';\nimport { taskForm } from '@/store/module/studyTask';\n\nexport default {\n  name: 'StudyTask',\n  data () {\n    return {\n      tabType: 'study',\n      tabPaneLoading: false,\n      hostData: [],\n      guestData: [],\n      modelInfo: [],\n      btnLoading: false,\n      taskForm,\n      taskRule: {},\n      baseRule: {\n        'host.namespace': [\n          { required: true, message: '请选择Host方数据', trigger: 'change' }\n        ],\n        'host.table_name': [\n          { required: true, message: '请选择Host方数据', trigger: 'change' }\n        ],\n        'guest.namespace': [\n          { required: true, message: '请选择Guest方数据', trigger: 'change' }\n        ],\n        'guest.table_name': [\n          { required: true, message: '请选择Guest方数据', trigger: 'change' }\n        ]\n      },\n      studyRule: {\n        model_type: [\n          { required: true, message: '请选择模型', trigger: 'change' }\n        ]\n      },\n      testRule: {\n        'model.id': [\n          { required: true, message: '请选择模型', trigger: 'change' }\n        ],\n        'model.version': [\n          { required: true, message: '请选择模型版本', trigger: 'change' }\n        ]\n      }\n    };\n  },\n  methods: {\n    createHttp (role) {\n      const method = this.tabType === 'study' ? 'train' : 'predict';\n      return http.get('/getDatainfo', { params: { method, role } });\n    },\n    tabClick () {\n      this.taskForm = JSON.parse(JSON.stringify(taskForm));\n      this.$nextTick(() => {\n        this.$refs.taskForm.resetFields();\n      });\n      let loading = true;\n      this.tabPaneLoading = true;\n      if (!this.modelInfo.length && this.tabType !== 'study') {\n        http.get('/getModelinfo').then(res => {\n          this.modelInfo = res;\n          if (loading) {\n            loading = false;\n          } else {\n            this.tabPaneLoading = false;\n          }\n        });\n      } else {\n        loading = false;\n      }\n      Promise.all([this.createHttp('host'), this.createHttp('guest')]).then(resList => {\n        this.hostData = resList[0];\n        this.guestData = resList[1];\n        if (loading) {\n          loading = false;\n          console.log(\"11111\");\n        } else {\n          this.tabPaneLoading = false;\n        }\n      });\n    },\n    getTableName (list, key, namespace, getName) {\n      if (list.length && namespace) {\n        const result = list.find(val => val[key] === namespace);\n        return result ? result[getName] : [];\n      } else {\n        return [];\n      }\n    },\n    handleSubmit () {\n      this.taskRule = Object.assign({}, this.baseRule, this.tabType === 'study' ? this.studyRule : this.testRule);\n      setTimeout(() => {\n        this.$refs.taskForm.validate(bool => {\n          if (!bool) {\n            return false;\n          }\n          this.btnLoading = true;\n          const params = {\n            data: {\n              host: this.taskForm.host,\n              guest: this.taskForm.guest\n            }\n          };\n          if (this.tabType === 'study') {\n            params.task = 'train';\n            params.model_type = this.taskForm.model_type;\n          } else {\n            params.task = 'predict';\n            params.model = this.taskForm.model;\n          }\n          http.post('/Submit', params).then(res => {\n            if (res.status === 1) {\n              localStorage.setItem('board_url', res.board_url);\n              this.$router.push({ name: 'resultPage', query: { redirect: '1' } });\n              this.btnLoading = false;\n            } else {\n              this.$Message.error(res.message);\n            }\n          });\n        });\n      }, 10);\n    }\n  },\n  created () {\n    this.taskRule = Object.assign({}, this.baseRule, this.studyRule, this.testRule);\n    this.tabClick();\n  }\n};\n\n</script>\n\n<style lang=\"less\">\n.study-task-page {\n  .ivu-tabs-bar {\n    margin-bottom: 30px;\n  }\n}\n</style>\n"],"sourceRoot":"src/views/studyTask"}]}