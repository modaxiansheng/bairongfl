{"remainingRequest":"E:\\bairongfl\\node_modules\\thread-loader\\dist\\cjs.js!E:\\bairongfl\\node_modules\\babel-loader\\lib\\index.js!E:\\bairongfl\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\bairongfl\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\bairongfl\\node_modules\\@bairong\\jax\\src\\components\\layout\\common\\ownSpace\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\bairongfl\\node_modules\\@bairong\\jax\\src\\components\\layout\\common\\ownSpace\\index.vue","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\bairongfl\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport md5 from 'md5';\nexport default {\n  name: 'ownSapce',\n  components: {},\n  props: {\n    isShowOwnSpace: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    var _this = this;\n\n    var validateOldPassword = function validateOldPassword(rule, value, callback) {\n      if (/^\\s*$/g.test(value)) {\n        callback(new Error('请输入原密码'));\n      }\n      /* if (!/^(?![0-9_!@#$%^&*()]+$)(?![a-zA-Z_!@#$%^&*()]+$)(?![_!@#$%^&*()]+$)[0-9A-Za-z_!@#$%^&*()]{6,16}$/g.test(value)) {\n          callback(new Error(\"密码由6-16位数字和字母组成，且必须同时包含数字和字母！\"));\n        } */\n\n\n      callback();\n    };\n\n    var validateNewPassword = function validateNewPassword(rule, value, callback) {\n      if (/^\\s*$/g.test(value)) {\n        callback(new Error('请输入新密码'));\n      }\n\n      if (!/^(?![0-9_!@#$%^&*()]+$)(?![a-zA-Z_!@#$%^&*()]+$)(?![_!@#$%^&*()]+$)[0-9A-Za-z_!@#$%^&*()]{6,16}$/g.test(value)) {\n        callback(new Error('密码由6-16位数字和字母组成，且必须同时包含数字和字母！'));\n      }\n\n      if (_this.formPassword.oldPassword === _this.formPassword.newPassword) {\n        callback(new Error('新旧密码不能相同'));\n      }\n\n      callback();\n    };\n\n    var validateConfirmPassword = function validateConfirmPassword(rule, value, callback) {\n      if (/^\\s*$/g.test(value)) {\n        callback(new Error('请输入确认密码'));\n      }\n\n      if (!/^(?![0-9_!@#$%^&*()]+$)(?![a-zA-Z_!@#$%^&*()]+$)(?![_!@#$%^&*()]+$)[0-9A-Za-z_!@#$%^&*()]{6,16}$/g.test(value)) {\n        callback(new Error('密码由6-16位数字和字母组成，且必须同时包含数字和字母！'));\n      }\n\n      if (_this.formPassword.newPassword !== _this.formPassword.confirmPassword) {\n        callback(new Error('两次输入密码必须相同'));\n      }\n\n      callback();\n    };\n\n    return {\n      saveLoading: false,\n      showModal: false,\n      formPassword: {\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      ruleValidate: {\n        oldPassword: [{\n          required: true,\n          validator: validateOldPassword,\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          validator: validateNewPassword,\n          trigger: 'blur'\n        }],\n        confirmPassword: [{\n          required: true,\n          validator: validateConfirmPassword,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  computed: {\n    userName: function userName() {\n      return this.$store.state.user.userName;\n    }\n  },\n  methods: {\n    /**\n     * 重置按钮\n     * */\n    resetLoading: function resetLoading() {\n      var _this2 = this;\n\n      this.saveLoading = true;\n      setTimeout(function () {\n        _this2.saveLoading = false;\n      }, 1500);\n    },\n    cancel: function cancel() {\n      console.log('lineNum:', '114', 'class:', 'cancel');\n      this.resetFields();\n      this.$emit('hideOwnSpace');\n    },\n    resetFields: function resetFields() {\n      this.$refs['formPasswordValidate'].resetFields();\n    },\n    save: function save(name) {\n      var _this3 = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          var params = {\n            oldPassword: md5(_this3.formPassword.oldPassword),\n            newPassword: md5(_this3.formPassword.newPassword)\n          };\n\n          _this3.$store.dispatch('user/editPassword', params);\n        } else {\n          _this3.$Message.error('原密码为空或新密码格式有误！');\n\n          _this3.resetLoading();\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.showModal = this.isShowOwnSpace;\n  },\n  watch: {\n    isShowOwnSpace: function isShowOwnSpace(val) {\n      this.showModal = val;\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["\n<template>\n  <div>\n    <Modal v-model=\"showModal\" :mask-closable=\"false\" width=\"500\" @on-cancel=\"cancel\">\n      <h3 slot=\"header\">修改密码</h3>\n      <Form :model=\"formPassword\" label-position=\"right\" :label-width=\"100\" ref=\"formPasswordValidate\"\n            :rules=\"ruleValidate\">\n        <FormItem label=\"用户名:\">\n          <span>{{userName}}</span>\n        </FormItem>\n        <FormItem label=\"原密码:\" prop=\"oldPassword\">\n          <Input type=\"password\" v-model=\"formPassword.oldPassword\" placeholder=\"请输入原密码\"/>\n        </FormItem>\n        <FormItem label=\"新密码:\" prop=\"newPassword\">\n          <Input type=\"password\" v-model=\"formPassword.newPassword\" placeholder=\"请输入新密码，必须同时包含数字和字母\"/>\n        </FormItem>\n        <FormItem label=\"确认密码:\" prop=\"confirmPassword\">\n          <Input type=\"password\" v-model=\"formPassword.confirmPassword\" placeholder=\"请输入确认密码\"/>\n        </FormItem>\n      </Form>\n      <div slot=\"footer\">\n        <Button type=\"primary\" :loading=\"saveLoading\" @click=\"save('formPasswordValidate')\">保存</Button>\n        <Button @click=\"cancel\">取消</Button>\n      </div>\n    </Modal>\n  </div>\n</template>\n<script>\nimport md5 from 'md5';\n\nexport default {\n  name: 'ownSapce',\n  components: {\n  },\n  props: {\n    isShowOwnSpace: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data () {\n    const validateOldPassword = (rule, value, callback) => {\n      if (/^\\s*$/g.test(value)) {\n        callback(new Error('请输入原密码'));\n      }\n      /* if (!/^(?![0-9_!@#$%^&*()]+$)(?![a-zA-Z_!@#$%^&*()]+$)(?![_!@#$%^&*()]+$)[0-9A-Za-z_!@#$%^&*()]{6,16}$/g.test(value)) {\n          callback(new Error(\"密码由6-16位数字和字母组成，且必须同时包含数字和字母！\"));\n        } */\n      callback();\n    };\n    const validateNewPassword = (rule, value, callback) => {\n      if (/^\\s*$/g.test(value)) {\n        callback(new Error('请输入新密码'));\n      }\n      if (!/^(?![0-9_!@#$%^&*()]+$)(?![a-zA-Z_!@#$%^&*()]+$)(?![_!@#$%^&*()]+$)[0-9A-Za-z_!@#$%^&*()]{6,16}$/g.test(value)) {\n        callback(new Error('密码由6-16位数字和字母组成，且必须同时包含数字和字母！'));\n      }\n      if (this.formPassword.oldPassword === this.formPassword.newPassword) {\n        callback(new Error('新旧密码不能相同'));\n      }\n      callback();\n    };\n\n    const validateConfirmPassword = (rule, value, callback) => {\n      if (/^\\s*$/g.test(value)) {\n        callback(new Error('请输入确认密码'));\n      }\n      if (!/^(?![0-9_!@#$%^&*()]+$)(?![a-zA-Z_!@#$%^&*()]+$)(?![_!@#$%^&*()]+$)[0-9A-Za-z_!@#$%^&*()]{6,16}$/g.test(value)) {\n        callback(new Error('密码由6-16位数字和字母组成，且必须同时包含数字和字母！'));\n      }\n      if (this.formPassword.newPassword !== this.formPassword.confirmPassword) {\n        callback(new Error('两次输入密码必须相同'));\n      }\n      callback();\n    };\n\n    return {\n      saveLoading: false,\n      showModal: false,\n      formPassword: {\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      ruleValidate: {\n        oldPassword: [\n          { required: true, validator: validateOldPassword, trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, validator: validateNewPassword, trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, validator: validateConfirmPassword, trigger: 'blur' }\n        ]\n      }\n    };\n  },\n  computed: {\n    userName () {\n      return this.$store.state.user.userName;\n    }\n\n  },\n  methods: {\n    /**\n     * 重置按钮\n     * */\n    resetLoading: function () {\n      this.saveLoading = true;\n      setTimeout(() => {\n        this.saveLoading = false;\n      }, 1500);\n    },\n    cancel: function () {\n      console.log('lineNum:', '114', 'class:', 'cancel');\n      this.resetFields();\n      this.$emit('hideOwnSpace');\n    },\n    resetFields: function () {\n      this.$refs['formPasswordValidate'].resetFields();\n    },\n    save: function (name) {\n      this.$refs[name].validate((valid) => {\n        if (valid) {\n          let params = {\n            oldPassword: md5(this.formPassword.oldPassword),\n            newPassword: md5(this.formPassword.newPassword)\n          };\n          this.$store.dispatch('user/editPassword', params);\n        } else {\n          this.$Message.error('原密码为空或新密码格式有误！');\n          this.resetLoading();\n        }\n      });\n    }\n  },\n  mounted () {\n    this.showModal = this.isShowOwnSpace;\n  },\n  watch: {\n    isShowOwnSpace (val) {\n      this.showModal = val;\n    }\n  }\n};\n</script>\n"],"sourceRoot":"node_modules/@bairong/jax/src/components/layout/common/ownSpace"}]}